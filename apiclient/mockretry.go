// Code generated by MockGen. DO NOT EDIT.
// Source: retry.go

// Package apiclient is a generated GoMock package.
package apiclient

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockRetryClient is a mock of RetryClient interface
type MockRetryClient struct {
	ctrl     *gomock.Controller
	recorder *MockRetryClientMockRecorder
}

// MockRetryClientMockRecorder is the mock recorder for MockRetryClient
type MockRetryClientMockRecorder struct {
	mock *MockRetryClient
}

// NewMockRetryClient creates a new mock instance
func NewMockRetryClient(ctrl *gomock.Controller) *MockRetryClient {
	mock := &MockRetryClient{ctrl: ctrl}
	mock.recorder = &MockRetryClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRetryClient) EXPECT() *MockRetryClientMockRecorder {
	return m.recorder
}

// Do mocks base method
func (m *MockRetryClient) Do(req *http.Request) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do", req)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Do indicates an expected call of Do
func (mr *MockRetryClientMockRecorder) Do(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockRetryClient)(nil).Do), req)
}
